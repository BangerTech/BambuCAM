version: '3.8'

services:
  frontend:
    build: ./frontend
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:4000
    networks:
      - printer-network
    depends_on:
      backend:
        condition: service_healthy

  backend:
    build: ./backend
    network_mode: "host"  # Wichtig f√ºr RTSP/SSDP
    environment:
      - NODE_ENV=production
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  mock-printer-1:
    image: ullaakut/rtspatt
    ports:
      - "8554:8554"
    environment:
      - RTSP_ADDRESS=0.0.0.0
      - RTSP_PORT=8554
      - RTSP_ROUTE=/streaming/live/1
      - RTSP_USERNAME=bblp
      - RTSP_PASSWORD=12345678
      - INPUT=pattern:ball
      - ENABLE_TIME_OVERLAY=true
      - FRAMERATE=30
    networks:
      - printer-network

  mock-printer-2:
    image: ullaakut/rtspatt
    ports:
      - "8555:8554"
    environment:
      - RTSP_ADDRESS=0.0.0.0
      - RTSP_PORT=8554
      - RTSP_ROUTE=/streaming/live/1
      - RTSP_USERNAME=bblp
      - RTSP_PASSWORD=12345678
      - INPUT=pattern:snow
      - ENABLE_TIME_OVERLAY=true
      - FRAMERATE=30
    networks:
      - printer-network

  mock-printer-3:
    image: ullaakut/rtspatt
    ports:
      - "8556:8554"
    environment:
      - RTSP_ADDRESS=0.0.0.0
      - RTSP_PORT=8554
      - RTSP_ROUTE=/streaming/live/1
      - RTSP_USERNAME=bblp
      - RTSP_PASSWORD=12345678
      - INPUT=pattern:smpte
      - ENABLE_TIME_OVERLAY=true
      - FRAMERATE=30
    networks:
      - printer-network

networks:
  printer-network:
    driver: bridge 