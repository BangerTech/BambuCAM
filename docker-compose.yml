version: '3.8'

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
      - NODE_ENV=development
      - REACT_APP_DEV=true
    network_mode: "host"
    command: npm start
    ports:
      - "3000:3000"

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    volumes:
      - ./backend:/app
      - ./backend/data:/app/data
      - bambucam_logs:/app/logs
    ports:
      - "4000:4000"
    environment:
      - FLASK_APP=src/app.py
      - FLASK_ENV=development
    command: flask run --host=0.0.0.0 --port=4000

  nginx:
    image: nginx:alpine
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    network_mode: "host"
    restart: unless-stopped
    depends_on:
      - backend
      - frontend

volumes:
  bambucam_data:
  bambucam_logs: 