worker_processes auto;

events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Vereinfachtes Log-Format ohne User-Agent und Referer
    log_format simple '$remote_addr - - [$time_local] "$request" $status $body_bytes_sent';
    access_log /var/log/nginx/access.log simple;

    server {
        listen 80;
        server_name _;

        # Frontend
        location / {
            proxy_pass http://0.0.0.0:3000;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }

        # API Endpoints
        location /api/ {
            proxy_pass http://0.0.0.0:4000/api/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }

        # Stream Endpoint
        location /stream/ {
            proxy_pass http://0.0.0.0:4000/stream/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_set_header Host $host;
            
            # CORS Headers
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' '*' always;
            
            # Streaming-spezifische Headers
            proxy_read_timeout 86400;
            proxy_set_header Accept-Encoding "";
            proxy_buffering off;
            proxy_cache off;
            chunked_transfer_encoding off;
            
            # Debug-Logging
            error_log /var/log/nginx/stream_error.log debug;
            access_log /var/log/nginx/stream_access.log;
        }
    }
} 