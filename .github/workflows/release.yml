name: Release Build

on:
  push:
    tags:
      - 'v*'

# Wichtig: Permissions hinzufÃ¼gen
permissions:
  contents: write
  packages: write

jobs:
  create-release:
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            BambuCAM Release ${{ github.ref }}
            
            Includes:
            - Windows Installer (BambuCAM-Setup.exe)
            - Docker Compose Package (BambuCAM-docker.zip)
            
            Docker Images:
            ```bash
            docker pull bangertech/bambucam-frontend:${{ github.ref_name }}
            docker pull bangertech/bambucam-backend:${{ github.ref_name }}
            ```
          draft: false
          prerelease: false

  build-installer:
    needs: create-release
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'
      
      - name: Build Installer
        run: |
          dotnet restore installer/BambuCAM.Installer
          dotnet publish installer/BambuCAM.Installer -c Release -r win-x64 --self-contained true
      
      - name: Upload Installer
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./installer/BambuCAM.Installer/bin/Release/net8.0-windows/win-x64/publish/BambuCAM Setup.exe
          asset_name: BambuCAM-Setup.exe
          asset_content_type: application/vnd.microsoft.portable-executable

  build-docker:
    needs: create-release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Build and push Frontend
        uses: docker/build-push-action@v4
        with:
          context: ./frontend
          push: true
          tags: bangertech/bambucam-frontend:latest,bangertech/bambucam-frontend:${{ github.ref_name }}
      
      - name: Build and push Backend
        uses: docker/build-push-action@v4
        with:
          context: ./backend
          push: true
          tags: bangertech/bambucam-backend:latest,bangertech/bambucam-backend:${{ github.ref_name }}

      - name: Create docker-compose.yml
        run: |
          cat > docker-compose.yml << 'EOL'
          version: '3.8'
          services:
            frontend:
              image: bangertech/bambucam-frontend:latest
              container_name: frontend
              restart: unless-stopped
              ports:
                - "80:80"
              depends_on:
                - backend
                - go2rtc
          
            backend:
              image: bangertech/bambucam-backend:latest
              container_name: backend
              restart: unless-stopped
              volumes:
                - ./backend/data:/app/data
              environment:
                - FLASK_HOST=0.0.0.0
                - FLASK_PORT=4000
              ports:
                - "4000:4000"
          
            go2rtc:
              image: alexxit/go2rtc
              container_name: go2rtc
              restart: unless-stopped
              network_mode: host
              volumes:
                - ./backend/data/go2rtc:/config
          EOL

      - name: Create Docker Package
        run: |
          mkdir -p BambuCAM-docker
          cp docker-compose.yml BambuCAM-docker/
          cp README.md BambuCAM-docker/
          zip -r BambuCAM-docker.zip BambuCAM-docker/

      - name: Upload Docker Package
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./BambuCAM-docker.zip
          asset_name: BambuCAM-docker.zip
          asset_content_type: application/zip 